// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../yande/model/post.dart';
import '../yande/model/similar.dart';
import 'package:collection/collection.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<YandeClient>>
abstract class YandeClient implements RustOpaqueInterface {
  Future<void> downloadToFile({
    required String url,
    required String filePath,
    required int maxTaskCount,
    required FutureOr<void> Function(BigInt, BigInt) progressCallback,
  });

  Future<Uint8List> downloadToMemory({required String url, required FutureOr<void> Function(BigInt, BigInt) progressCallback});

  Future<List<Post>> getPosts({required List<String> tags, required int limit, required int page});

  Future<Similar> getSimilar({required PlatformInt64 postId});

  factory YandeClient({StringArray3? ips, required bool forLargeFile}) =>
      RustLib.instance.api.crateApiYandeClientYandeClientNew(ips: ips, forLargeFile: forLargeFile);
}

class StringArray3 extends NonGrowableListView<String> {
  static const arraySize = 3;

  @internal
  List<String> get inner => _inner;
  final List<String> _inner;

  StringArray3(this._inner) : assert(_inner.length == arraySize), super(_inner);

  StringArray3.init(String fill) : this(List<String>.filled(arraySize, fill));
}
